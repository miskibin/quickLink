<?xml version="1.0" encoding="utf-8"?>
<Window
    x:Class="quickLink.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:quickLink"
    xmlns:models="using:quickLink.Models"
    xmlns:converters="using:quickLink.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Window.SystemBackdrop>
        <MicaBackdrop Kind="Base"/>
    </Window.SystemBackdrop>

    <Grid x:Name="RootGrid" Background="Transparent" KeyDown="OnRootKeyDown">
        
        <!-- Modern semi-transparent background - no CornerRadius to avoid double border with window -->
        <Border Background="Transparent" 
                BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}" 
                BorderThickness="1"
                Margin="0">
            <Border.Shadow>
                <ThemeShadow />
            </Border.Shadow>
      
            <Grid Margin="0" x:Name="ContentGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

 <!-- PowerToys-style Search Box -->
         <TextBox x:Name="SearchBox"
   Grid.Row="0"
     PlaceholderText="Search for apps, files and commands..."
       FontSize="16"
    CornerRadius="0"
      BorderThickness="0,0,0,1"
   Background="Transparent"
   BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
        Padding="16,14"
Margin="0"
    TextChanged="OnSearchTextChanged"
                  TabIndex="0">
        <TextBox.KeyboardAccelerators>
           <KeyboardAccelerator Key="Escape" Invoked="OnEscapePressed"/>
           <KeyboardAccelerator Key="Enter" Invoked="OnEnterPressed"/>
 <KeyboardAccelerator Key="Space" Modifiers="Control" Invoked="OnToggleVisibility"/>
          <KeyboardAccelerator Key="Down" Invoked="OnDownArrow"/>
    <KeyboardAccelerator Key="Up" Invoked="OnUpArrow"/>
      </TextBox.KeyboardAccelerators>
  </TextBox>

    <!-- List View (hidden when editing) -->
    <ListView x:Name="ItemsList"
      Grid.Row="1"
  SelectionMode="Single"
       IsItemClickEnabled="False"
  CanReorderItems="False"
  CanDragItems="False"
Background="Transparent"
            Padding="8,4,8,8"
          MaxHeight="280"
    Visibility="Visible">
           <ListView.ItemContainerStyle>
  <Style TargetType="ListViewItem">
     <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
   <Setter Property="Padding" Value="0"/>
  <Setter Property="Margin" Value="0,2,0,2"/>
   <Setter Property="MinHeight" Value="0"/>
  <Setter Property="CornerRadius" Value="4"/>
  <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="ListViewItem">
                  <Grid x:Name="Root" 
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                      <!-- PowerToys-style selection indicator -->
                      <Border x:Name="SelectionIndicator"
                              Width="3"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Stretch"
                              Background="{ThemeResource AccentFillColorDefaultBrush}"
                              CornerRadius="0,2,2,0"
                              Opacity="0"/>
                      
                      <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                              <VisualState x:Name="Normal" />
                              <VisualState x:Name="Selected">
                                  <VisualState.Setters>
                                      <Setter Target="Root.Background" Value="{ThemeResource SubtleFillColorSecondaryBrush}" />
                                      <Setter Target="SelectionIndicator.Opacity" Value="1" />
                                  </VisualState.Setters>
                              </VisualState>
                              <VisualState x:Name="PointerOver">
                                  <VisualState.Setters>
                                      <Setter Target="Root.Background" Value="{ThemeResource SubtleFillColorTertiaryBrush}" />
                                  </VisualState.Setters>
                              </VisualState>
                              <VisualState x:Name="PointerOverSelected">
                                  <VisualState.Setters>
                                      <Setter Target="Root.Background" Value="{ThemeResource SubtleFillColorSecondaryBrush}" />
                                      <Setter Target="SelectionIndicator.Opacity" Value="1" />
                                  </VisualState.Setters>
                              </VisualState>
                          </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <ContentPresenter x:Name="ContentPresenter"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Content="{TemplateBinding Content}"
                                      ContentTransitions="{TemplateBinding ContentTransitions}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="3,0,0,0"/>
                  </Grid>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
      </Style>
 </ListView.ItemContainerStyle>
  <ListView.ItemTemplate>
  <DataTemplate x:DataType="models:ClipboardItem">
   <Grid Background="Transparent"
         Padding="12,10">
    <Grid.ColumnDefinitions>
  <ColumnDefinition Width="Auto"/>
   <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
   </Grid.ColumnDefinitions>

       <!-- PowerToys-style vibrant icons -->
 <Grid Grid.Column="0" Width="20" Height="20" Margin="0,0,12,0" VerticalAlignment="Center">
     <!-- Link icon (only for links) -->
     <FontIcon FontFamily="Segoe Fluent Icons"
      Glyph="&#xE71B;"
  FontSize="20"
  Foreground="#0078D4">
   <FontIcon.Visibility>
       <Binding Path="IsLink" Mode="OneWay">
           <Binding.Converter>
               <StaticResource ResourceKey="BoolToVisibilityConverter"/>
           </Binding.Converter>
       </Binding>
   </FontIcon.Visibility>
     </FontIcon>
          <!-- Encrypted text icon (lock) - only for non-links that are encrypted -->
          <FontIcon FontFamily="Segoe Fluent Icons"
 Glyph="&#xE72E;"
       FontSize="20"
          Foreground="#E74856">
              <FontIcon.Visibility>
                  <Binding Path="IsEncryptedAndNotLink" Mode="OneWay">
                      <Binding.Converter>
                          <StaticResource ResourceKey="BoolToVisibilityConverter"/>
                      </Binding.Converter>
                  </Binding>
              </FontIcon.Visibility>
          </FontIcon>
          <!-- Command icon (terminal) - only for commands -->
          <FontIcon FontFamily="Segoe Fluent Icons"
 Glyph="&#xE756;"
       FontSize="20"
          Foreground="#10893E">
              <FontIcon.Visibility>
                  <Binding Path="IsCommandAndNotLink" Mode="OneWay">
                      <Binding.Converter>
                          <StaticResource ResourceKey="BoolToVisibilityConverter"/>
                      </Binding.Converter>
                  </Binding>
              </FontIcon.Visibility>
          </FontIcon>
          <!-- Internal command icon - shows different icon based on command -->
          <FontIcon FontFamily="Segoe Fluent Icons"
       FontSize="16"
          Foreground="{ThemeResource AccentFillColorDefaultBrush}">
              <FontIcon.Glyph>
                  <Binding Path="Value" Mode="OneWay">
                      <Binding.Converter>
                          <StaticResource ResourceKey="InternalCommandIconConverter"/>
                      </Binding.Converter>
                  </Binding>
              </FontIcon.Glyph>
              <FontIcon.Visibility>
                  <Binding Path="IsInternalCommand" Mode="OneWay">
                      <Binding.Converter>
                          <StaticResource ResourceKey="BoolToVisibilityConverter"/>
                      </Binding.Converter>
                  </Binding>
              </FontIcon.Visibility>
          </FontIcon>
          <!-- Regular text icon (document) - only for non-links that are not encrypted -->
          <FontIcon FontFamily="Segoe Fluent Icons"
 Glyph="&#xE8A5;"
       FontSize="16">
              <FontIcon.Visibility>
                  <Binding Path="IsPlainText" Mode="OneWay">
                      <Binding.Converter>
                          <StaticResource ResourceKey="BoolToVisibilityConverter"/>
                      </Binding.Converter>
                  </Binding>
              </FontIcon.Visibility>
          </FontIcon>
   </Grid>

   <StackPanel Grid.Column="1" Spacing="2" VerticalAlignment="Center">
           <TextBlock Text="{x:Bind DisplayTitle, Mode=OneWay}"
      FontWeight="SemiBold"
            FontSize="13"
       TextTrimming="CharacterEllipsis"/>
      <TextBlock Text="{x:Bind DisplayValue, Mode=OneWay}"
  FontSize="11"
     TextTrimming="CharacterEllipsis"
  MaxLines="1"
   Opacity="0.7"/>
          </StackPanel>

      <StackPanel Grid.Column="2" 
  Orientation="Horizontal" 
     Spacing="1" 
    VerticalAlignment="Center">
          <StackPanel.Visibility>
              <Binding Path="IsInternalCommand" Mode="OneWay">
                  <Binding.Converter>
                      <StaticResource ResourceKey="InverseBoolToVisibilityConverter"/>
                  </Binding.Converter>
              </Binding>
          </StackPanel.Visibility>
<Button Width="28" Height="28" 
     Padding="0" 
     CornerRadius="4"
   Background="Transparent" 
      BorderThickness="0"
      Click="OnEditClicked" 
        Tag="{x:Bind}">
         <FontIcon FontFamily="Segoe Fluent Icons" 
   Glyph="&#xE70F;" 
   FontSize="12"/>
        </Button>
 <Button Width="28" Height="28" 
          Padding="0" 
   CornerRadius="4"
   Background="Transparent" 
         BorderThickness="0"
  Click="OnDeleteClicked" 
Tag="{x:Bind}">
         <FontIcon FontFamily="Segoe Fluent Icons" 
          Glyph="&#xE74D;" 
       FontSize="12"/>
   </Button>
      </StackPanel>
     </Grid>
    </DataTemplate>
            </ListView.ItemTemplate>
  <ListView.KeyboardAccelerators>
     <KeyboardAccelerator Key="Enter" Invoked="OnEnterPressed"/>
    <KeyboardAccelerator Key="Escape" Invoked="OnEscapePressed"/>
       </ListView.KeyboardAccelerators>
      </ListView>
      
      <!-- Fixed Footer with Add New Item, Settings, and Exit buttons -->
      <Grid x:Name="FooterPanel" 
            Grid.Row="2" 
            Background="Transparent"
            Margin="0,4,0,0">
          <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          
          <!-- Add New Item Button -->
          <Button Grid.Column="0"
                  x:Name="AddNewButton"
                  Background="Transparent"
                  BorderThickness="0"
                  HorizontalAlignment="Stretch"
                  HorizontalContentAlignment="Left"
                  Padding="6,5"
                  CornerRadius="6"
                  Click="OnAddNewTapped"
                  TabIndex="1">
              <StackPanel Orientation="Horizontal" Spacing="8">
                  <FontIcon FontFamily="Segoe Fluent Icons"
                           Glyph="&#xE710;"
                           FontSize="16"
                           Foreground="{ThemeResource AccentFillColorDefaultBrush}"
                           VerticalAlignment="Center"/>
                  <TextBlock Text="Add new item"
                            FontWeight="SemiBold"
                            FontSize="13"
                            Foreground="{ThemeResource AccentFillColorDefaultBrush}"
                            VerticalAlignment="Center"/>
              </StackPanel>
          </Button>
          
          <!-- Settings and Close Buttons -->
          <StackPanel Grid.Column="1" Orientation="Horizontal" Spacing="3">
              <Button x:Name="SettingsButton"
                      Background="Transparent"
                      BorderThickness="0"
                      Width="32"
                      Height="32"
                      Padding="0"
                      CornerRadius="6"
                      Click="OnSettingsClicked"
                      TabIndex="2"
                      ToolTipService.ToolTip="Settings">
                  <FontIcon FontFamily="Segoe Fluent Icons"
                           Glyph="&#xE713;"
                           FontSize="16"
                           Foreground="{ThemeResource TextFillColorSecondaryBrush}"/>
              </Button>
              
              <Button x:Name="ExitButton"
                      Background="Transparent"
                      BorderThickness="0"
                      Width="32"
                      Height="32"
                      Padding="0"
                      CornerRadius="6"
                      Click="OnExitClicked"
                      TabIndex="3"
                      ToolTipService.ToolTip="Exit Application">
                  <FontIcon FontFamily="Segoe Fluent Icons"
                           Glyph="&#xE711;"
                           FontSize="16"
                           Foreground="#C42B1C"/>
              </Button>
          </StackPanel>
      </Grid>

      <!-- Inline Edit View -->
  <StackPanel x:Name="EditPanel"
     Grid.Row="1"
     Grid.RowSpan="2"
     Spacing="10"
Visibility="Collapsed"
  Background="Transparent">
      <StackPanel.KeyboardAccelerators>
          <KeyboardAccelerator Key="Escape" Invoked="OnCancelEditKey"/>
      </StackPanel.KeyboardAccelerators>
 <TextBox x:Name="EditTitle"
    PlaceholderText="Title (optional)"
  FontSize="13"
       CornerRadius="6"
       Background="{ThemeResource LayerFillColorDefaultBrush}"
  BorderThickness="0"
     Padding="10,8"
      MaxLength="100"/>

   <TextBox x:Name="EditValue"
 PlaceholderText="Paste text or URL..."
    FontSize="13"
  CornerRadius="6"
        Background="{ThemeResource LayerFillColorDefaultBrush}"
     BorderThickness="0"
  Padding="10,8"
   TextWrapping="Wrap"
          AcceptsReturn="True"
  MinHeight="80"
      MaxHeight="120"/>

  <CheckBox x:Name="EditEncrypt"
        Content="Encrypt"
 FontSize="12"/>

      <StackPanel Orientation="Horizontal" Spacing="6" HorizontalAlignment="Right">
   <Button Content="Cancel"
   Click="OnCancelEdit"
   CornerRadius="6"
  Padding="14,8"
  FontSize="12"/>
   <Button Content="Save"
   Click="OnSaveEdit"
Style="{StaticResource AccentButtonStyle}"
       CornerRadius="6"
  Padding="14,8"
   FontSize="12"/>
       </StackPanel>
        </StackPanel>

      <!-- Settings View -->
      <StackPanel x:Name="SettingsPanel"
                  Grid.Row="1"
                  Grid.RowSpan="2"
                  Spacing="10"
                  Visibility="Collapsed"
                  Background="Transparent">
          <StackPanel.KeyboardAccelerators>
              <KeyboardAccelerator Key="Escape" Invoked="OnCloseSettingsKey"/>
          </StackPanel.KeyboardAccelerators>
          
          <!-- Start with system -->
          <CheckBox x:Name="StartWithSystemCheckBox"
                   Content="Launch on system startup"
                   FontSize="13"
                   Checked="OnStartWithSystemChanged"
                   Unchecked="OnStartWithSystemChanged"
                   TabIndex="10"/>
          
          <!-- Hide footer -->
          <CheckBox x:Name="HideFooterCheckBox"
                   Content="Hide footer (make Add/Settings/Exit searchable)"
                   FontSize="13"
                   Checked="OnHideFooterChanged"
                   Unchecked="OnHideFooterChanged"
                   TabIndex="11"/>
          
          <!-- Hotkey customization -->
          <StackPanel Spacing="5">
              <TextBlock Text="Click the box below and press a key combination (e.g., Ctrl+Shift+Q)"
                        FontSize="11"
                        Opacity="0.6"/>
              <Grid>
                  <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  
                  <TextBox x:Name="HotkeyTextBox"
                          Grid.Column="0"
                          PlaceholderText="Click and press keys..."
                          FontSize="13"
                          CornerRadius="6"
                          Background="{ThemeResource LayerFillColorDefaultBrush}"
                          BorderThickness="0"
                          Padding="10,8"
                          IsReadOnly="True"
                          PreviewKeyDown="OnHotkeyKeyDown"
                          Margin="0,0,6,0"
                          TabIndex="12"/>
                  
                  <Button x:Name="ApplyHotkeyButton"
                         Grid.Column="1"
                         Content="Apply"
                         Click="OnApplyHotkey"
                         CornerRadius="6"
                         Padding="14,8"
                         FontSize="12"
                         IsEnabled="False"
                         Margin="0,0,6,0"
                         TabIndex="13"
                         Style="{ThemeResource AccentButtonStyle}"/>
                  
                  <Button Grid.Column="2"
                         Content="Reset"
                         Click="OnResetHotkey"
                         CornerRadius="6"
                         Padding="14,8"
                         FontSize="12"
                         TabIndex="14"/>
              </Grid>
              <TextBlock x:Name="HotkeyStatusText"
                        FontSize="11"
                        Opacity="0.6"
                        Margin="0,2,0,0"
                        Text="Hotkeys must be: Modifier(s) + one key (no sequences like Ctrl+Space+A)"/>
          </StackPanel>
          
          <StackPanel Orientation="Horizontal" Spacing="6" HorizontalAlignment="Right">
              <Button Content="Close"
                     Click="OnCloseSettings"
                     CornerRadius="6"
                     Padding="14,8"
                     FontSize="12"
                     TabIndex="15"/>
          </StackPanel>
      </StackPanel>

      <!-- Minimal Loading Indicator -->
 <Grid x:Name="LoadingOverlay" 
  Grid.RowSpan="2"
Background="{ThemeResource AcrylicBackgroundFillColorDefaultBrush}"
         Visibility="Collapsed">
 <ProgressRing IsActive="True" Width="40" Height="40"/>
</Grid>
            </Grid>
        </Border>
    </Grid>
</Window>
